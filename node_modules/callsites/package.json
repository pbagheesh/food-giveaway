{
  "_args": [
    [
      {
        "raw": "callsites@^1.0.0",
        "scope": null,
        "escapedName": "callsites",
        "name": "callsites",
        "rawSpec": "^1.0.0",
        "spec": ">=1.0.0 <2.0.0",
        "type": "range"
      },
      "/Users/prashant/Documents/Projects/pal/boilerplate-api/node_modules/parent-module"
    ]
  ],
  "_from": "callsites@>=1.0.0 <2.0.0",
  "_id": "callsites@1.0.1",
  "_inCache": true,
  "_location": "/callsites",
  "_nodeVersion": "4.4.2",
  "_npmOperationalInternal": {
    "host": "packages-16-east.internal.npmjs.com",
    "tmp": "tmp/callsites-1.0.1.tgz_1462973676632_0.5280761285685003"
  },
  "_npmUser": {
    "name": "sindresorhus",
    "email": "sindresorhus@gmail.com"
  },
  "_npmVersion": "2.15.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "callsites@^1.0.0",
    "scope": null,
    "escapedName": "callsites",
    "name": "callsites",
    "rawSpec": "^1.0.0",
    "spec": ">=1.0.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/parent-module"
  ],
  "_resolved": "https://registry.npmjs.org/callsites/-/callsites-1.0.1.tgz",
  "_shasum": "c14c24188ce8e1d6a030b4c3c942e6ba895b6a1a",
  "_shrinkwrap": null,
  "_spec": "callsites@^1.0.0",
  "_where": "/Users/prashant/Documents/Projects/pal/boilerplate-api/node_modules/parent-module",
  "author": {
    "name": "Sindre Sorhus",
    "email": "sindresorhus@gmail.com",
    "url": "sindresorhus.com"
  },
  "bugs": {
    "url": "https://github.com/sindresorhus/callsites/issues"
  },
  "dependencies": {},
  "description": "Get callsites from the V8 stack trace API",
  "devDependencies": {
    "ava": "*",
    "xo": "*"
  },
  "directories": {},
  "dist": {
    "shasum": "c14c24188ce8e1d6a030b4c3c942e6ba895b6a1a",
    "tarball": "https://registry.npmjs.org/callsites/-/callsites-1.0.1.tgz"
  },
  "engines": {
    "node": ">=0.10"
  },
  "files": [
    "index.js"
  ],
  "gitHead": "c18e4ce8ce38fb0e628f9a423471c9bac991e42a",
  "homepage": "https://github.com/sindresorhus/callsites#readme",
  "keywords": [
    "stacktrace",
    "v8",
    "callsite",
    "callsites",
    "stack",
    "trace",
    "function",
    "file",
    "line",
    "debug"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "sindresorhus",
      "email": "sindresorhus@gmail.com"
    }
  ],
  "name": "callsites",
  "optionalDependencies": {},
  "readme": "# callsites [![Build Status](https://travis-ci.org/sindresorhus/callsites.svg?branch=master)](https://travis-ci.org/sindresorhus/callsites)\n\n> Get callsites from the [V8 stack trace API](https://github.com/v8/v8/wiki/Stack-Trace-API)\n\n\n## Install\n\n```\n$ npm install --save callsites\n```\n\n\n## Usage\n\n```js\nconst callsites = require('callsites');\n\nfunction unicorn() {\n\tconsole.log(callsites()[0].getFileName());\n\t//=> '/Users/sindresorhus/dev/callsites/test.js'\n}\n\nunicorn();\n```\n\n\n## API\n\nReturns an array of callsite objects with the following methods:\n\n- `getTypeName`: returns the type of this as a string. This is the name of the function stored in the constructor field of this, if available, otherwise the object's [[Class]] internal property.\n- `getFunctionName`: returns the name of the current function, typically its name property. If a name property is not available an attempt will be made to try to infer a name from the function's context.\n- `getMethodName`: returns the name of the property of this or one of its prototypes that holds the current function\n- `getFileName`: if this function was defined in a script returns the name of the script\n- `getLineNumber`: if this function was defined in a script returns the current line number\n- `getColumnNumber`: if this function was defined in a script returns the current column number\n- `getEvalOrigin`: if this function was created using a call to eval returns a CallSite object representing the location where eval was called\n- `isToplevel`: is this a top-level invocation, that is, is this the global object?\n- `isEval`: does this call take place in code defined by a call to eval?\n- `isNative`: is this call in native V8 code?\n- `isConstructor`: is this a constructor call?\n\n\n## License\n\nMIT Â© [Sindre Sorhus](https://sindresorhus.com)\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/sindresorhus/callsites.git"
  },
  "scripts": {
    "test": "xo && ava"
  },
  "version": "1.0.1"
}
