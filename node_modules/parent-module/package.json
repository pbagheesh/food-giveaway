{
  "_args": [
    [
      {
        "raw": "parent-module@0.1.x",
        "scope": null,
        "escapedName": "parent-module",
        "name": "parent-module",
        "rawSpec": "0.1.x",
        "spec": ">=0.1.0 <0.2.0",
        "type": "range"
      },
      "/Users/prashant/Documents/Projects/pal/boilerplate-api/node_modules/haute-couture"
    ]
  ],
  "_from": "parent-module@>=0.1.0 <0.2.0",
  "_id": "parent-module@0.1.0",
  "_inCache": true,
  "_location": "/parent-module",
  "_nodeVersion": "4.2.4",
  "_npmUser": {
    "name": "sindresorhus",
    "email": "sindresorhus@gmail.com"
  },
  "_npmVersion": "2.14.12",
  "_phantomChildren": {},
  "_requested": {
    "raw": "parent-module@0.1.x",
    "scope": null,
    "escapedName": "parent-module",
    "name": "parent-module",
    "rawSpec": "0.1.x",
    "spec": ">=0.1.0 <0.2.0",
    "type": "range"
  },
  "_requiredBy": [
    "/haute-couture"
  ],
  "_resolved": "https://registry.npmjs.org/parent-module/-/parent-module-0.1.0.tgz",
  "_shasum": "b5292863a1e8c476ecf857e7d75c98920b24b8a6",
  "_shrinkwrap": null,
  "_spec": "parent-module@0.1.x",
  "_where": "/Users/prashant/Documents/Projects/pal/boilerplate-api/node_modules/haute-couture",
  "author": {
    "name": "Sindre Sorhus",
    "email": "sindresorhus@gmail.com",
    "url": "sindresorhus.com"
  },
  "bugs": {
    "url": "https://github.com/sindresorhus/parent-module/issues"
  },
  "dependencies": {
    "callsites": "^1.0.0"
  },
  "description": "Get the path of the parent module",
  "devDependencies": {
    "ava": "*",
    "execa": "^0.2.2",
    "xo": "*"
  },
  "directories": {},
  "dist": {
    "shasum": "b5292863a1e8c476ecf857e7d75c98920b24b8a6",
    "tarball": "https://registry.npmjs.org/parent-module/-/parent-module-0.1.0.tgz"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "files": [
    "index.js"
  ],
  "gitHead": "0ebdd4a7582d4cee30ca2151fbd592b4b3b20ff2",
  "homepage": "https://github.com/sindresorhus/parent-module#readme",
  "keywords": [
    "parent",
    "module",
    "package",
    "pkg",
    "caller",
    "calling",
    "module",
    "path",
    "callsites",
    "callsite",
    "stacktrace",
    "stack",
    "trace",
    "function",
    "file"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "sindresorhus",
      "email": "sindresorhus@gmail.com"
    }
  ],
  "name": "parent-module",
  "optionalDependencies": {},
  "readme": "# parent-module [![Build Status](https://travis-ci.org/sindresorhus/parent-module.svg?branch=master)](https://travis-ci.org/sindresorhus/parent-module)\n\n> Get the path of the parent module\n\nNode.js exposes `module.parent`, but it only gives you the first cached parent, which is not necessarily the actual parent.\n\n\n## Install\n\n```\n$ npm install --save parent-module\n```\n\n\n## Usage\n\n```js\n// bar.js\nconst parentModule = require('parent-module');\n\nmodule.exports = () => {\n\tconsole.log(parentModule());\n\t//=> '/Users/sindresorhus/dev/unicorn/foo.js'\n}\n```\n\n```js\n// foo.js\nconst bar = require('./bar');\nbar();\n```\n\n\n## API\n\n### parentModule([filepath])\n\nBy default it will return the path of the immediate parent.\n\n#### filepath\n\nType: `string`<br>\nDefault: [`__filename`](https://nodejs.org/api/globals.html#globals_filename)\n\nFilepath of the module of which to get the parent path.\n\nUseful if you want it to work [multiple module levels down](https://github.com/sindresorhus/parent-module/tree/master/fixtures/filepath).\n\n\n## Tip\n\nCombine it with [`read-pkg-up`](https://github.com/sindresorhus/read-pkg-up) to read the package.json of the parent module.\n\n```js\nconst path = require('path');\nconst readPkgUp = require('read-pkg-up');\nconst parentModule = require('parent-module');\n\nconsole.log(readPkgUp.sync({cwd: path.dirname(parentModule)}).pkg);\n//=> {name: 'chalk', version: '1.0.0', ...}\n```\n\n\n## License\n\nMIT Â© [Sindre Sorhus](http://sindresorhus.com)\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/sindresorhus/parent-module.git"
  },
  "scripts": {
    "test": "xo && ava"
  },
  "version": "0.1.0"
}
