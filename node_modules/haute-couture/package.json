{
  "_args": [
    [
      {
        "raw": "haute-couture@2.x.x",
        "scope": null,
        "escapedName": "haute-couture",
        "name": "haute-couture",
        "rawSpec": "2.x.x",
        "spec": ">=2.0.0 <3.0.0",
        "type": "range"
      },
      "/Users/prashant/Documents/Projects/pal/boilerplate-api"
    ]
  ],
  "_from": "haute-couture@>=2.0.0 <3.0.0",
  "_id": "haute-couture@2.0.0",
  "_inCache": true,
  "_location": "/haute-couture",
  "_nodeVersion": "7.5.0",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/haute-couture-2.0.0.tgz_1490191698469_0.11065584886819124"
  },
  "_npmUser": {
    "name": "devinivy",
    "email": "devin@bigroomstudios.com"
  },
  "_npmVersion": "3.10.7",
  "_phantomChildren": {},
  "_requested": {
    "raw": "haute-couture@2.x.x",
    "scope": null,
    "escapedName": "haute-couture",
    "name": "haute-couture",
    "rawSpec": "2.x.x",
    "spec": ">=2.0.0 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/haute-couture/-/haute-couture-2.0.0.tgz",
  "_shasum": "034bedac2e1d5ba015d1d3734e9b01c2b61ce0ba",
  "_shrinkwrap": null,
  "_spec": "haute-couture@2.x.x",
  "_where": "/Users/prashant/Documents/Projects/pal/boilerplate-api",
  "author": {
    "name": "Devin Ivy",
    "email": "devin@bigroomstudios.com"
  },
  "bugs": {
    "url": "https://github.com/devinivy/haute-couture/issues"
  },
  "dependencies": {
    "haute": ">=1.3.0 <2",
    "hoek": "4.x.x",
    "parent-module": "0.1.x",
    "topo": "2.x.x"
  },
  "description": "File-based hapi plugin composer",
  "devDependencies": {
    "catbox-memory": "2.x.x",
    "chairo": "3.x.x",
    "code": "4.x.x",
    "coveralls": "2.x.x",
    "dogwater": ">=2.3.0 <3",
    "glob": "7.x.x",
    "hapi": "16.x.x",
    "joi": "10.x.x",
    "knex": "0.12.x",
    "lab": "13.x.x",
    "loveboat": ">=1.5.0 <2",
    "objection": ">=0.6 <0.8",
    "renamer": "0.5.x",
    "schwifty": "1.x.x",
    "seneca-echo": "0.3.x",
    "sqlite3": "3.x.x",
    "vision": "4.x.x",
    "waterline": "0.12.x"
  },
  "directories": {
    "test": "test"
  },
  "dist": {
    "shasum": "034bedac2e1d5ba015d1d3734e9b01c2b61ce0ba",
    "tarball": "https://registry.npmjs.org/haute-couture/-/haute-couture-2.0.0.tgz"
  },
  "gitHead": "639b1bb7a28a48080de320480c35c4ca812a6074",
  "homepage": "https://github.com/devinivy/haute-couture#readme",
  "keywords": [
    "hapi",
    "scaffold",
    "boilerplate",
    "directory",
    "structure",
    "utility",
    "loveboat",
    "dogwater",
    "chairo"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "devinivy",
      "email": "devin@bigroomstudios.com"
    }
  ],
  "name": "haute-couture",
  "optionalDependencies": {},
  "peerDependencies": {
    "hapi": ">=10 <17"
  },
  "readme": "# haute-couture\n\nFile-based hapi plugin composer\n\n[![Build Status](https://travis-ci.org/devinivy/haute-couture.svg?branch=master)](https://travis-ci.org/devinivy/haute-couture) [![Coverage Status](https://coveralls.io/repos/devinivy/haute-couture/badge.svg?branch=master&service=github)](https://coveralls.io/github/devinivy/haute-couture?branch=master)\n\nThis library will wire your hapi plugin together based simply upon where you place files.  It has the ability to call every configuration-related method in the hapi plugin API.  This means many good things.\n\nTo name a few,\n\n - Route configurations placed in your `routes/` directory will be registered using `server.route()`.\n - You can place your authentication scheme in `auth/schemes.js` rather than calling `server.auth.scheme()`.\n - You can provision a cache simply by placing its configuration in `caches/my-cache-name.js`, and forget about `server.cache.provision()`.\n - Where applicable, any of these files can be configured as JSON.\n - You can teach haute-couture how to use your own custom server decorations.\n - You can still write all the custom plugin code you desire.\n\nAgain, **haute-couture** understands 23 hapi plugin methodsâ€“ those for server methods, custom handler types, server/request decorations, request lifecycle extensions, route configuration, cookie definitions, [loveboat](https://github.com/devinivy/loveboat) routes and transforms, [vision](https://github.com/hapijs/vision) view managers, [dogwater](https://github.com/devinivy/dogwater) or [schwifty](https://github.com/BigRoomStudios/schwifty) model definitions, [chairo](https://github.com/hapijs/chairo) action-methods, and plenty more.  It can also be used as an alternative to [glue](https://github.com/hapijs/glue) for composing a server.\n\n## Usage\n> See also the [API Reference](API.md)\n\nThis library is actually not used as a hapi plugin.  Think of it instead as a useful subroutine of any hapi plugin.  The full documentation of the files and directories it recognizes can be found in the [API](API.md#files-and-directories).\n\nHere's an example of a very simple plugin that registers a single \"pinger\" route.\n\n#### `index.js`\n```js\nconst HauteCouture = require('haute-couture');\n\n// Either...\n// 1. a plugin wired with haute-couture plus custom logic\nmodule.exports = (server, options, next) => {\n\n  HauteCouture.using()(server, options, (err) => {\n\n    // Handle err, do custom plugin duties\n\n    return next();\n  });\n};\n\n// 2. a plugin entirely wired using haute-couture\nmodule.exports = HauteCouture.using();\n\nmodule.exports.attributes = {\n  name: 'my-hapi-plugin'\n};\n```\n\n#### `routes/pinger.js`\n```js\n// Note, this could also export an array of routes\nmodule.exports = {\n  method: 'get',\n  path: '/',\n  config: {\n    // The route id 'pinger' will be assigned\n    // automatically from the filename\n    handler: (request, reply) => {\n      reply({ ping: 'pong' });\n    }\n  }\n};\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/devinivy/haute-couture.git"
  },
  "scripts": {
    "coveralls": "lab -r lcov | coveralls",
    "test": "lab -a code -t 100 -I '__core-js_shared__' && lab -dlL"
  },
  "version": "2.0.0"
}
